<UserControl
    x:Class="PromptBuilder.Desktop.Views.CreateTemplateView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:PromptBuilder.Desktop.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:validation="clr-namespace:PromptBuilder.Desktop.Views.Validations"
    xmlns:viewmodels="clr-namespace:PromptBuilder.Desktop.ViewModels"
    d:Background="White"
    d:DataContext="{d:DesignInstance Type=viewmodels:CreateTemplateViewModel}"
    d:DesignHeight="900"
    d:DesignWidth="1600"
    mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="6*" />
        </Grid.RowDefinitions>
        <DockPanel VerticalAlignment="Center">
            <TextBox
                Width="100"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="Name"
                Style="{StaticResource MaterialDesignFilledTextBox}">
                <TextBox.Text>
                    <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="Category"
                Style="{StaticResource MaterialDesignFilledTextBox}">
                <TextBox.Text>
                    <Binding Path="Category" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </DockPanel>

        <Button
            Grid.Column="2"
            Width="70"
            Height="70"
            Command="{Binding SaveTemplateCommand}"
            Style="{StaticResource MaterialDesignIconButton}"
            ToolTip="Save template">
            <materialDesign:PackIcon
                Width="50"
                Height="50"
                Kind="ContentSave" />
        </Button>

        <TextBox
            Grid.Row="2"
            VerticalAlignment="Stretch"
            AcceptsReturn="True"
            SpellCheck.IsEnabled="True"
            Text="{Binding TemplateBody}"
            TextWrapping="Wrap"
            VerticalScrollBarVisibility="Auto" />
        <StackPanel Grid.Row="2" Grid.Column="1">
            <TextBox
                Margin="10"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="New variable"
                Style="{StaticResource MaterialDesignFilledTextBox}"
                Text="{Binding NewVariableName}" />
            <Button
                Command="{Binding AddNewVariableCommand}"
                Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                ToolTip="Add a new variable">
                <materialDesign:PackIcon Kind="Plus" />
            </Button>
            <Button
                Command="{Binding DeleteVariableCommand}"
                Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                ToolTip="Add a new variable">
                <materialDesign:PackIcon Kind="Minus" />
            </Button>
            <Button
                Command="{Binding InsertVariableCommand}"
                Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                ToolTip="Insert variable in the template body">
                <materialDesign:PackIcon Kind="PencilPlus" />
            </Button>
            <ListView ItemsSource="{Binding TemplateVariables}" SelectedItem="{Binding SelectedVariable}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <WrapPanel>
                            <TextBlock VerticalAlignment="Center" Text="{Binding .}" />
                        </WrapPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </StackPanel>
    </Grid>
</UserControl>
